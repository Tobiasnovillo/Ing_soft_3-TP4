# Azure DevOps Pipeline - CI para Frontend + Backend
# Trabajo PrÃ¡ctico 04 - 2025

trigger:
  branches:
    include:
      - main
      - develop
  paths:
    include:
      - front/*
      - back/*
      - azure-pipelines.yml

# Pool de agente Self-Hosted
pool:
  name: 'SelfHosted'
  demands:
    - agent.name -equals Agent-Local

variables:
  buildConfiguration: 'Release'
  nodeVersion: '18.x'

stages:
- stage: CI
  displayName: 'Continuous Integration'
  jobs:
  
  # Job para Backend
  - job: BackendBuild
    displayName: 'Backend Build & Test'
    steps:
    
    - checkout: self
      displayName: 'Checkout Repository'
    
    - task: NodeTool@0
      displayName: 'Install Node.js $(nodeVersion)'
      inputs:
        versionSpec: '$(nodeVersion)'
    
    - task: Npm@1
      displayName: 'Backend - npm ci'
      inputs:
        command: 'ci'
        workingDir: 'back'
    
    - task: Npm@1
      displayName: 'Backend - Run Tests'
      inputs:
        command: 'custom'
        customCommand: 'test'
        workingDir: 'back'
    
    - task: Npm@1
      displayName: 'Backend - Build'
      inputs:
        command: 'custom'
        customCommand: 'run build'
        workingDir: 'back'
    
    - task: CopyFiles@2
      displayName: 'Copy Backend Files'
      inputs:
        SourceFolder: 'back'
        Contents: |
          **/*
          !node_modules/**/*
          !.git/**/*
        TargetFolder: '$(Build.ArtifactStagingDirectory)/backend'
        CleanTargetFolder: true
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Backend Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/backend'
        ArtifactName: 'backend-drop'
        publishLocation: 'Container'

  # Job para Frontend
  - job: FrontendBuild
    displayName: 'Frontend Build & Test'
    steps:
    
    - checkout: self
      displayName: 'Checkout Repository'
    
    - task: NodeTool@0
      displayName: 'Install Node.js $(nodeVersion)'
      inputs:
        versionSpec: '$(nodeVersion)'
    
    - task: Npm@1
      displayName: 'Frontend - npm ci'
      inputs:
        command: 'ci'
        workingDir: 'front'
    
    - task: Npm@1
      displayName: 'Frontend - Run Tests'
      inputs:
        command: 'custom'
        customCommand: 'test'
        workingDir: 'front'
      env:
        CI: true
    
    - task: Npm@1
      displayName: 'Frontend - Build Production'
      inputs:
        command: 'custom'
        customCommand: 'run build'
        workingDir: 'front'
    
    - task: CopyFiles@2
      displayName: 'Copy Frontend Build Files'
      inputs:
        SourceFolder: 'front/build'
        Contents: '**/*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/frontend'
        CleanTargetFolder: true
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Frontend Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/frontend'
        ArtifactName: 'frontend-drop'
        publishLocation: 'Container'

  # Job de validaciÃ³n final
  - job: ValidationJob
    displayName: 'Pipeline Validation'
    dependsOn: 
      - BackendBuild
      - FrontendBuild
    condition: succeeded()
    steps:
    
    - checkout: none
    
    - powershell: |
        Write-Host "âœ… Pipeline CI ejecutado exitosamente!"
        Write-Host "âœ… Backend: Build y Test completados"
        Write-Host "âœ… Frontend: Build y Test completados"
        Write-Host "âœ… Artefactos publicados correctamente"
        Write-Host "ðŸŽ¯ Trabajo PrÃ¡ctico 04 - COMPLETADO"
      displayName: 'Pipeline Success Summary'